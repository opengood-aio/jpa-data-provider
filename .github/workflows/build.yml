name: build
# description:
# - Runs Gradle build compiling source code and executing tests
on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/cancel.yml'
      - '.github/workflows/release.yml'
      - '.github/workflows/updater.yml'
      - '.gitignore'
      - 'gradle.properties'
      - 'LICENSE'
      - 'README.md'

jobs:
  build:
    name: Run Build
    runs-on: ubuntu-latest
    if: ${{ github.event.head_commit.message != 'Create release' }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_ADMIN_DB_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

      - name: Setup Java
        uses: actions/setup-java@v2.5.0
        with:
          java-version: 11
          distribution: adopt

      - name: Create Postgres Database and Service Account
        run: |
          psql -c "CREATE USER ${POSTGRES_DB_USER} WITH ENCRYPTED PASSWORD '${POSTGRES_DB_PASSWORD}';" ${POSTGRES_URI}
          psql -f migrations/create_database.sql ${POSTGRES_URI}
        env:
          POSTGRES_URI: ${{ secrets.POSTGRES_BUILD_DB_URI }}
          POSTGRES_DB_USER: ${{ secrets.POSTGRES_BUILD_DB_SVC_NAME }}
          POSTGRES_DB_PASSWORD: ${{ secrets.POSTGRES_BUILD_DB_SVC_PASSWORD }}

      - name: Database Migration
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: flywayMigrate
          gradle-version: wrapper
        env:
          FLYWAY_URL: ${{ secrets.POSTGRES_BUILD_DB_URI }}
          FLYWAY_USER: ${{ secrets.POSTGRES_BUILD_DB_SVC_NAME }}
          FLYWAY_PASSWORD: ${{ secrets.POSTGRES_BUILD_DB_SVC_PASSWORD }}

      - name: Build
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: clean build
          gradle-version: wrapper
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.POSTGRES_BUILD_DB_URI }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.POSTGRES_BUILD_DB_SVC_NAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_BUILD_DB_SVC_PASSWORD }}

      - name: Codestyle
        uses: fabiocapasso93/gha-kotlin-linter@v1.1

      - name: Coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          file: ./build/reports/jacoco/test/jacocoTestReport.xml
          verbose: true

      - name: FOSSA
        uses: fossas/fossa-action@v1.1.0
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}
